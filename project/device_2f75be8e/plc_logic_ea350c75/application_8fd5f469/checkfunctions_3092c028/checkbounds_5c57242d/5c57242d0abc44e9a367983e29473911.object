{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)5c57242d-0abc-44e9-a367-983e29473911","ParentGuid":"(Guid)8fd5f469-da90-4937-9f6d-0af55ac7d509","Name":"(string)CheckBounds","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}},{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)3092c028-abf8-4d24-94c2-4f8b8868d794"}]}}}}]},"TypeGuid":"(Guid)c3fc9989-e24b-4002-a2c7-827a0a2595f4","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","bool":"System.Boolean","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"c3fc9989","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextLines":{"@Type":"[a5de0b0b]","@Value":[{"@Type":"a5de0b0b","@Value":{"Id":"(long)499","Tag":null,"Text":"(string)    (*****************************************************************************************************)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)500","Tag":null,"Text":"(string)    (* The implementation has to be adjusted to your application/machine.                                *)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)501","Tag":null,"Text":"(string)    (* This is an exemplary implementation of the function.                                              *)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)502","Tag":null,"Text":"(string)    (* Per default, an access violation is generated in case of an faulty acces to avoid machine damage. *)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)503","Tag":null,"Text":"(string)    (* In this case, check the Call Stack (menu Debug/Callstack) and modify the faulty logic.            *)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)504","Tag":null,"Text":"(string)    (*****************************************************************************************************)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)505","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)506","Tag":null,"Text":"(string)IF  index < lower THEN "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)507","Tag":null,"Text":"(string)  strError:= 'CheckBounds: Lower arrayindex ';"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)508","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= DINT_TO_STRING(lower));"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)509","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= ' underrunned by ');"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)510","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= DINT_TO_STRING(index));"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)511","Tag":null,"Text":"(string)//  Default implementation for APPLICATION WILL BE STOPPED: "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)512","Tag":null,"Text":"(string)//  Set an error into the plc logger"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)513","Tag":null,"Text":"(string)  LogAdd2(hLogger:= CmpLog.LOG_STD_LOGGER,udiCmpID:= 16#1000,udiClassID:= LogClass.LOG_ERROR,udiErrorID:= 1,udiInfoID:= 1,pszInfo:= strError);"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)514","Tag":null,"Text":"(string)//  Triggering an access violation --> Application will be stopped"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)515","Tag":null,"Text":"(string)  ptNull^ := 0;(* Triggering an access violation *)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)516","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)517","Tag":null,"Text":"(string)// // Example for APPLICATION WILL NOT BE STOPPED:"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)518","Tag":null,"Text":"(string)// // Limit the faulty index to the lower index "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)519","Tag":null,"Text":"(string)// //     --> no memory will be overwritten"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)520","Tag":null,"Text":"(string)// //     --> Keep PLC-task running"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)521","Tag":null,"Text":"(string)// // Set a warning into the plc logger"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)522","Tag":null,"Text":"(string)// // NOTE: There is still an implementation error in your application code!"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)523","Tag":null,"Text":"(string)// //  LogAdd2(hLogger:= CmpLog.LOG_STD_LOGGER,udiCmpID:= 16#1000,udiClassID:= LogClass.LOG_WARNING,udiErrorID:= 1,udiInfoID:= 1,pszInfo:= strError);"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)524","Tag":null,"Text":"(string)// // "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)525","Tag":null,"Text":"(string)//  CheckBounds := lower; //access to the lower index only "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)526","Tag":null,"Text":"(string)//  return;"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)527","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)528","Tag":null,"Text":"(string)ELSIF  index > upper THEN"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)529","Tag":null,"Text":"(string)  strError:= 'CheckBounds: Higher arrayindex ';"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)530","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= DINT_TO_STRING(upper));"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)531","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= ' overrunned by ');"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)532","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= DINT_TO_STRING(index));"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)533","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)534","Tag":null,"Text":"(string)//  Default implementation for APPLICATION WILL BE STOPPED: "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)535","Tag":null,"Text":"(string)//  Set an error into the plc logger"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)536","Tag":null,"Text":"(string)  LogAdd2(hLogger:= CmpLog.LOG_STD_LOGGER,udiCmpID:= 16#1000,udiClassID:= LogClass.LOG_ERROR,udiErrorID:= 1,udiInfoID:= 1,pszInfo:= strError);"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)537","Tag":null,"Text":"(string)//  Triggering an access violation --> Application will be stopped"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)538","Tag":null,"Text":"(string)  ptNull^ := 0;(* Triggering an access violation *)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)539","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)540","Tag":null,"Text":"(string)// // Example for APPLICATION WILL NOT BE STOPPED:"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)541","Tag":null,"Text":"(string)// // Limit the faulty index to the upper index "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)542","Tag":null,"Text":"(string)// //     --> no memory will be overwritten"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)543","Tag":null,"Text":"(string)// //     --> Keep PLC-task running"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)544","Tag":null,"Text":"(string)// // Set a warning into the plc logger"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)545","Tag":null,"Text":"(string)// // NOTE: There is still an implementation error in your application code!"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)546","Tag":null,"Text":"(string)//  LogAdd2(hLogger:= CmpLog.LOG_STD_LOGGER,udiCmpID:= 16#1000,udiClassID:= LogClass.LOG_WARNING,udiErrorID:= 1,udiInfoID:= 1,pszInfo:= strError);"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)547","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)548","Tag":null,"Text":"(string)//  CheckBounds := upper; //access to the upper index only "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)549","Tag":null,"Text":"(string)//  return;"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)550","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)551","Tag":null,"Text":"(string)ELSE // access to array is within lower and upper index --> ok  "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)552","Tag":null,"Text":"(string)  CheckBounds := index;"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)553","Tag":null,"Text":"(string)END_IF"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)2","Tag":null,"Text":"(string)"}}]}}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextLines":{"@Type":"[a5de0b0b]","@Value":[{"@Type":"a5de0b0b","@Value":{"Id":"(long)443","Tag":null,"Text":"(string)// Short description:      Test function to increase machine safety by checking for unauthorized array indices accesses."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)444","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)445","Tag":null,"Text":"(string)// Functional description: This function is implicitly called prior to each array access and verifies if the access is within the valid array bounds."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)446","Tag":null,"Text":"(string)//                         If the access is authorized, the function returns the index to the calling POU and the access is completed."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)447","Tag":null,"Text":"(string)//                         If the access is unauthorized, an exception is triggered as default error reaction. This exception results in an application stop and the system is set to safe state. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)448","Tag":null,"Text":"(string)//   "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)449","Tag":null,"Text":"(string)// Handling particularities: Sporadically, the implemented default error reaction has TO be adjusted TO the application. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)450","Tag":null,"Text":"(string)//                           For example, stopping of the application can be invalid and can result in complicated recommissioning or even injury to people or damage to machines."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)451","Tag":null,"Text":"(string)//                           Thus, adjust the default error reaction to your application."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)452","Tag":null,"Text":"(string)//                           After inserting/removing this function in/from the project, no online change is possible."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)453","Tag":null,"Text":"(string)//                           A complete download is required."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)454","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)455","Tag":null,"Text":"(string)// Further information:    The implicit calls of this check function are realized in all POUs but not in POUs of protected (*.compiled library) "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)456","Tag":null,"Text":"(string)//                         and open (*.library) libraries or in POUs with the attribute {attribute 'no_check'}. Consequently, they do not increase the runtime."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)457","Tag":null,"Text":"(string)//                         If the check is also to be performed in open libraries, enter the compiler definition "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)458","Tag":null,"Text":"(string)//                         checks_in_libs in the field Compiler-Defines of the Build tab in the property dialog of the application node."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)459","Tag":null,"Text":"(string)//                         An increased runtime depends on the number of programmed array accesses."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)460","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)461","Tag":null,"Text":"(string)//                         To reduce task runtimes, add the attribute 'no_check' to the POUs. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)462","Tag":null,"Text":"(string)//                         Checks performed by the check functions (CheckPointer, CheckBounds, CheckDiv, CheckRange) are not performed in these POUs. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)463","Tag":null,"Text":"(string)//                         Thus, these POUs have to be checked by the user regarding pointer programming, divisions and array accesses.  "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)464","Tag":null,"Text":"(string)//                         For more information, refer to the F1-help."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)465","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)466","Tag":null,"Text":"(string)//                         In the standard implementation, it is checked if the array access takes place within the valid array boundaries."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)467","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)468","Tag":null,"Text":"(string)//                         In case of invalid access (outside the valid array boundaries), an error is entered in the PLC logger and the application is stopped to avoid injury to persons and damage to machines."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)469","Tag":null,"Text":"(string)//                         In this case, check the callstack (menu Debug/Callstack) and change the incorrect logic."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)470","Tag":null,"Text":"(string)//"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)471","Tag":null,"Text":"(string)//                         If your application is not time-critical, use this function during commissioning as well as during the production phase of the machine."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)472","Tag":null,"Text":"(string)//                         Only remove this function if you are sure that your user code is free from errors!"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)473","Tag":null,"Text":"(string)// "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)474","Tag":null,"Text":"(string)// Do not change the declaration of this function! Add only local variables.  "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)475","Tag":null,"Text":"(string)// Do not change the attributes above the function header!"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)476","Tag":null,"Text":"(string){attribute 'check_bounds'}"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)477","Tag":null,"Text":"(string){attribute 'no_check'}"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)478","Tag":null,"Text":"(string){attribute 'signature_flag' := '1073741824'}"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)479","Tag":null,"Text":"(string)FUNCTION CheckBounds : DINT"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)480","Tag":null,"Text":"(string)VAR_INPUT"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)481","Tag":null,"Text":"(string)  index, lower, upper: DINT;   // Index of the array, lower bound and upper bound"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)482","Tag":null,"Text":"(string)END_VAR"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)483","Tag":null,"Text":"(string)VAR"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)486","Tag":null,"Text":"(string)  ptNull: POINTER TO BYTE :=0; // Nullpointer for triggering an access violation"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)487","Tag":null,"Text":"(string)  strError: STRING;            // Diagnostic text for the PLC logger entry"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1","Tag":null,"Text":"(string)END_VAR"}}]}}}}},"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"CheckBounds"}}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a5de0b0b":"{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","c3fc9989":"{c3fc9989-e24b-4002-a2c7-827a0a2595f4}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","long":"System.Int64","string":"System.String"}}},"FormatVersion":"1.0"}