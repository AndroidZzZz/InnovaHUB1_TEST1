{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)5958a7c4-4190-4632-9e8d-a0514bb4166b","ParentGuid":"(Guid)8fd5f469-da90-4937-9f6d-0af55ac7d509","Name":"(string)CheckPointer","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}},{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)3092c028-abf8-4d24-94c2-4f8b8868d794"}]}}}}]},"TypeGuid":"(Guid)c3fc9989-e24b-4002-a2c7-827a0a2595f4","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","bool":"System.Boolean","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"c3fc9989","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextLines":{"@Type":"[a5de0b0b]","@Value":[{"@Type":"a5de0b0b","@Value":{"Id":"(long)1268","Tag":null,"Text":"(string)IF ptToTest = 0 THEN //Just check NULL-Pointer"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1307","Tag":null,"Text":"(string)"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1294","Tag":null,"Text":"(string)  IF bWrite THEN // write access"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1295","Tag":null,"Text":"(string)    strError:='CheckPointer: Invalid write-access to 16#0';"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1296","Tag":null,"Text":"(string)  ELSE"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1297","Tag":null,"Text":"(string)    strError:='CheckPointer: Invalid read-access to 16#0';"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1298","Tag":null,"Text":"(string)  END_IF"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1299","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:= ' - Size: ');"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1301","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:=TO_STRING(iSize));"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1302","Tag":null,"Text":"(string)  strError:=CONCAT(STR1:=strError  , STR2:=' - See callstack for reason!');"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1303","Tag":null,"Text":"(string)  "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1304","Tag":null,"Text":"(string)  LogAdd2(hLogger:= CmpLog.LOG_STD_LOGGER,udiCmpID:= 16#1000,udiClassID:= LogClass.LOG_ERROR,udiErrorID:= 1,udiInfoID:= 1,pszInfo:= strError);"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1305","Tag":null,"Text":"(string)  //  Triggering an access violation --> Application will be stopped"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1309","Tag":null,"Text":"(string)  //  Sporadically, this default error reaction has to be adjusted to the application. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1310","Tag":null,"Text":"(string)  //  For example, stopping of the application can be invalid and can result in complicated recommissioning or even injury to people or damage to machines."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1308","Tag":null,"Text":"(string)  //  Thus, adjust the default error reaction to your application."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1306","Tag":null,"Text":"(string)  ptNull^ := 0; //Triggering an access violation "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1289","Tag":null,"Text":"(string)\t"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1290","Tag":null,"Text":"(string)ELSE // pointer is not a NULL-Pointer"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1291","Tag":null,"Text":"(string)\tCheckPointer := ptToTest; "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1292","Tag":null,"Text":"(string)END_IF"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)399","Tag":null,"Text":"(string)"}}]}}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextLines":{"@Type":"[a5de0b0b]","@Value":[{"@Type":"a5de0b0b","@Value":{"Id":"(long)1104","Tag":null,"Text":"(string)// Short description:      Test function to increase machine safety by detecting unauthorized accesses via POINTER and REFERENCE variables"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1105","Tag":null,"Text":"(string)//"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1106","Tag":null,"Text":"(string)// Functional description: This function is implicitly called prior to each pointer access and verifies if the access is invalid to 0."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1107","Tag":null,"Text":"(string)//                         If the access is authorized, the function returns the pointer to the calling POU and the access is completed."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1108","Tag":null,"Text":"(string)//                         If the access is unauthorized, an exception is triggered as default error reaction. This exception results in an application stop and the system is set to safe state. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1109","Tag":null,"Text":"(string)//                         It is recommended to adapt an appropriate error response to the machine application."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1110","Tag":null,"Text":"(string)//   "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1111","Tag":null,"Text":"(string)// Handling particularities: Sporadically, the implemented default error reaction has to be adjusted to the application. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1112","Tag":null,"Text":"(string)//                           For example, stopping of the application can be invalid and can result in complicated recommissioning or even injury to people or damage to machines."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1113","Tag":null,"Text":"(string)//                           Thus, adjust the default error reaction to your application."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1114","Tag":null,"Text":"(string)//                           After inserting/removing this function in/from the project, no online change is possible."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1115","Tag":null,"Text":"(string)//                           A complete download is required."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1116","Tag":null,"Text":"(string)//                         "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1117","Tag":null,"Text":"(string)// Further information:    The implicit calls of this check function are realized in all POUs but not in POUs of protected (*.compiled library) "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1118","Tag":null,"Text":"(string)//                         and open (*.library) libraries or in POUs with the attribute {attribute 'no_check'}. Consequently, they do not increase the runtime."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1119","Tag":null,"Text":"(string)//                         If the check is also to be performed in open libraries, enter the compiler definition "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1120","Tag":null,"Text":"(string)//                         checks_in_libs in the field Compiler-Defines of the Build tab in the property dialog of the application node."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1121","Tag":null,"Text":"(string)//                         An increased runtime depends on the number of programmed pointer accesses or the use of REFERENCE variables."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1122","Tag":null,"Text":"(string)//                         "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1123","Tag":null,"Text":"(string)//                         To reduce task runtimes, add the attribute 'no_check' to the POUs. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1124","Tag":null,"Text":"(string)//                         Checks performed by the check functions (CheckPointer, CheckBounds, CheckDiv, CheckRange) are not performed in these POUs. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1125","Tag":null,"Text":"(string)//                         Thus, these POUs have to be checked by the user regarding pointer programming, divisions and array accesses.  "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1126","Tag":null,"Text":"(string)//                         For more information, refer to the F1-help."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1127","Tag":null,"Text":"(string)//                         "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1128","Tag":null,"Text":"(string)//                         In the standard implementation, it is checked if the pointer access takes place to Adress 16#0 (NULL-Pointer)."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1248","Tag":null,"Text":"(string)//                         In this case, check the callstack (menu Debug/Callstack) and change the incorrect logic."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1140","Tag":null,"Text":"(string)//                         "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1149","Tag":null,"Text":"(string)//                         If your application is not time-critical, use this function during commissioning as well as during the production phase of the machine."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1150","Tag":null,"Text":"(string)//                         Only remove this function if you are sure that your user code is free from errors!"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1151","Tag":null,"Text":"(string)//"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1152","Tag":null,"Text":"(string)// Do not change the declaration of this function! Add only local variables.  "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1153","Tag":null,"Text":"(string)// Do not change the attributes above the function header!"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1154","Tag":null,"Text":"(string){attribute 'check_pointer'}"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1155","Tag":null,"Text":"(string){attribute 'signature_flag' := '1073741824'}"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1156","Tag":null,"Text":"(string){attribute 'no_check'}"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1157","Tag":null,"Text":"(string)FUNCTION CheckPointer : POINTER TO BYTE"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1158","Tag":null,"Text":"(string)VAR_INPUT "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1159","Tag":null,"Text":"(string)  ptToTest : POINTER TO BYTE; // Pointer target address"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1160","Tag":null,"Text":"(string)  iSize : DINT;\t\t            // Size of the type to which the pointer points. (z.B.: 20 für POINTER TO ARRAY [1..10] OF WORD) "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1161","Tag":null,"Text":"(string)  iGran : DINT;\t\t            // Granularity of the pointer access. This is the size of the largest unstructured data type in the type to which the pointer points. "}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1220","Tag":null,"Text":"(string)                                // (e.g.: 2 for POINTER TO ARRAY [0..9] OF INT)."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1219","Tag":null,"Text":"(string)  bWrite: BOOL;\t\t            // Indicates read or write access. TRUE = write access."}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1163","Tag":null,"Text":"(string)END_VAR"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1164","Tag":null,"Text":"(string)VAR"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1165","Tag":null,"Text":"(string)  ptNull:   POINTER TO BYTE := 0; // Nullpointer for triggering an access violation"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1166","Tag":null,"Text":"(string)  strError: STRING(128);          // Diagnostic text for the PLC logger entry"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1167","Tag":null,"Text":"(string)  i: INT;\t\t\t\t\t\t              // Index variable"}},{"@Type":"a5de0b0b","@Value":{"Id":"(long)1","Tag":null,"Text":"(string)END_VAR"}}]}}}}},"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"CheckPointer"}}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a5de0b0b":"{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","c3fc9989":"{c3fc9989-e24b-4002-a2c7-827a0a2595f4}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","long":"System.Int64","string":"System.String"}}},"FormatVersion":"1.0"}